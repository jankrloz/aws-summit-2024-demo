# https://taskfile.dev

version: "3"

vars:
  GREETING: Hello, World!

tasks:
  install:
    desc: ðŸ“¦ Install dependencies
    cmds:
      - poetry install

  lint:
    desc: ðŸŽ¨ Lint the code
    deps:
      - lint:check
      - lint:format
      - lint:type

  lint:fix:
    desc: ðŸŽ¨ Lint and fix the code
    deps:
      - lint:check:fix
      - lint:format:fix

  lint:check:
    internal: true
    cmds:
      - poetry run ruff check .

  lint:check:fix:
    internal: true
    cmds:
      - poetry run ruff check --fix .

  lint:type:
    internal: true
    cmds:
      - poetry run mypy .

  lint:format:
    internal: true
    cmds:
      - poetry run ruff format --check .

  lint:format:fix:
    internal: true
    cmds:
      - poetry run ruff format .

  test:
    desc: ðŸ§ª Test the code
    cmds:
      - poetry run pytest tests/

  test:watch:
    desc: ðŸ§ª Test the code in watch mode
    cmds:
      - poetry run pytest --watch tests/

  run:
    desc: ðŸš€ Run the application in development mode
    aliases:
      - dev
      - start
      - up
    cmds:
      - task --summary {{.TASK}}
      - docker compose up --detach

  run:watch:
    desc: ðŸš€ Run the application in development mode, and watch for changes for reloading
    aliases:
      - watch
      - dev:watch
      - start:watch
      - up:watch
    cmds:
      - docker compose up --watch

  run:build:
    desc: ðŸš€ Build and run the application
    aliases:
      - dev:build
      - start:build
      - up:build
    cmds:
      - docker compose up --build --detach

  restart:
    desc: ðŸš€ Restart the application
    aliases:
      - refresh
    cmds:
      - docker compose restart --build --detach

  logs:
    desc: ðŸªµ Show the application logs
    cmds:
      - docker compose logs --follow app

  logs:db:
    desc: ðŸªµ Show the database logs
    cmds:
      - docker compose logs --follow db

  stop:
    desc: ðŸ›‘ Stop the application
    cmds:
      - docker compose stop

  down:
    desc: ðŸ”» Stop the application, and remove the containers
    cmds:
      - docker compose down

  clean:containers:
    desc: ðŸ§¼ Clean the application, and associacted resources, like images, volumes and networks
    prompt: Are you sure?
    cmds:
      - docker compose down --rmi all --volumes
      - docker compose down --rmi local
